plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.appdistribution'
}

def getCurrentGitBranch() {
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        def resultCommit = 'git log -1'.execute(null, workingDir)
        result.waitFor()
        resultCommit.waitFor()
        gitBranch = result.text + "\n" + resultCommit.text
    } catch (ignored) {
    }
    return gitBranch
}

task publishDebugPro(type: Delete, group: "publish") {
    dependsOn("assembleProDebug")
    dependsOn("appDistributionUploadProDebug")
}

task publishDebugFree(type: Delete, group: "publish") {
    dependsOn("assembleFreeDebug")
    dependsOn("appDistributionUploadFreeDebug")
}

task publishReleasePro(type: Delete, group: "publish") {
    dependsOn("assembleProRelease")
    dependsOn("appDistributionUploadProRelease")
}

task publishReleaseFree(type: Delete, group: "publish") {
    dependsOn("assembleFreeRelease")
    dependsOn("appDistributionUploadFreeRelease")
}

def keystorePropertiesFile = rootProject.file("app/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

final String sysKeyAlias = System.getenv('KEY_ALIAS') ?: keystoreProperties['keyAlias']
final String sysKeyPassword = System.getenv('KEY_PASSWORD') ?: keystoreProperties['keyPassword']
final String sysStorePassword = System.getenv('KEY_STORE_PASSWORD') ?: keystoreProperties['storePassword']
final sysStoreFile = System.getenv('KEY_STORE_FILE') ?: file(keystoreProperties['storeFile'])

android {
    compileSdk 33

    defaultConfig {
        resConfigs 'pt'

        applicationId "com.quanticheart.tcg"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "${applicationId}-v${versionName}-(${versionCode})"
    }

    buildFeatures.viewBinding = true

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias sysKeyAlias
            keyPassword sysKeyPassword
            storeFile sysStoreFile
            storePassword sysStorePassword
        }
    }

    buildTypes {
        debug {
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
            ext.alwaysUpdateBuildId = false
            applicationIdSuffix ".debug"

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [
                    labelName: "@string/app_name_debug",
                    appIcon  : "@mipmap/ic_launcher"
            ]

            signingConfig signingConfigs.debug

            firebaseAppDistribution {
                appId = "1:688464559028:android:a2d4f4eedf750bc207d0e1"
                releaseNotes = getCurrentGitBranch()
                groups = "testers"
            }
        }
        release {
            ndk {
                abiFilters 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a'
            }

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [
                    labelName: "@string/app_name",
                    appIcon  : "@mipmap/ic_launcher"
            ]

            signingConfig signingConfigs.release
            firebaseAppDistribution {
                appId = "1:688464559028:android:4fb8457f347ca3be07d0e1"
                releaseNotes = getCurrentGitBranch()
                groups = "testers"
            }
        }
    }

    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
            firebaseAppDistribution {
                appId = "1:688464559028:android:4b3d90cefc08dd2d07d0e1"
                releaseNotes = getCurrentGitBranch()
                groups = "testers"
            }
        }
        pro {
            dimension "version"
            applicationIdSuffix ".pro"
            versionNameSuffix "-pro"
            firebaseAppDistribution {
                appId = "1:688464559028:android:c5238d4271b8027a07d0e1"
                releaseNotes = getCurrentGitBranch()
                groups = "testers"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'com.google.android.material:material:1.6.1'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.airbnb.android:lottie:5.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    implementation "io.insert-koin:koin-android:3.2.0"
    implementation "io.insert-koin:koin-android:3.2.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    implementation "androidx.navigation:navigation-fragment-ktx:2.5.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.2"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.1'

    implementation(project(":core"))
    implementation(project(":domain"))
    implementation(project(":repository"))

}